"wa", "vic", "qld", "nsw", "nsw", "wa", "sa", "act", "nsw",
"vic", "vic", "act")
state
state_levels <- c("act", "nsw", "nt", "qld", "sa", "tas", "vic", "wa")
state_factor <- factor(state, levels = state_levels)
state_factor
exercise_levels <- c("l", "n", "n", "i", "l", "l", "n", "n", "i", "l")
exercise_levels
exercise_factor <- factor(exercise_levels, levels = c("n", "l", "i"), ordered = TRUE)
exercise_factor
incomes <- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69,
70, 42, 56, 61, 61, 61, 58, 51, 48, 65,
49, 49, 41, 48, 52, 46, 59, 46, 58, 43)
state_levels <- c("act", "nsw", "nt", "qld", "sa", "tas", "vic", "wa")
state_factor <- factor(state, levels = state_levels)
inc_means <- tapply(incomes, state_factor, mean)
inc_means
state <- c("tas", "sa", "qld", "nsw", "nsw", "nt", "wa", "wa", "qld",
"vic", "nsw", "vic", "qld", "qld", "sa", "tas", "sa", "nt",
"wa", "vic", "qld", "nsw", "nsw", "wa", "sa", "act", "nsw",
"vic", "vic", "act")
state
state_levels <- c("act", "nsw", "nt", "qld", "sa", "tas", "vic", "wa")
state_factor <- factor(state, levels = state_levels)
state_factor
incomes <- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69,
70, 42, 56, 61, 61, 61, 58, 51, 48, 65,
49, 49, 41, 48, 52, 46, 59, 46, 58, 43)
state_levels <- c("act", "nsw", "nt", "qld", "sa", "tas", "vic", "wa")
state_factor <- factor(state, levels = state_levels)
inc_means <- tapply(incomes, state_factor, mean)
inc_means
incomes <- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69, 70, 42, 56, 61, 61, 61, 58, 51, 48, 65, 49, 49, 41, 48, 52, 46, 59, 46, 58, 43)
incmeans <- tapply(incomes, state_factor, mean)
incmeans
incomes <- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69, 70, 42, 56, 61, 61, 61, 58, 51, 48, 65, 49, 49, 41, 48, 52, 46, 59, 46, 58, 43)
incmeans <- tapply(incomes, state_factor, mean)
incmeans
stdError <- function(x) sqrt(var(x) / length(x))
inc_ster <- tapply(incomes, state_factor, stdError)
inc_ster
stdError <- function(x) sqrt(var(x) / length(x))
inc_ster <- tapply(incomes, state_factor, stdError)
inc_ster
titanic <- data("Titanic")
titanic
titanic <- data("Titanic")
View("Titanic")
data(Titanic)
View(Titanic)
titanic <- data(Titanic)
titanic
titanic <- data(Titanic)
``View(Titanic)
titanic <- data(Titanic)
View(Titanic)
survived <- subset(titanic, Survived == "Yes")
survived <- titanic[titanic$Survived == "Yes",]
survived <- titanic[titanic$Survived == "Yes"]
survived <- titanic[Titanic$Survived == "Yes",]
survived <- Titanic[Titanic$Survived == "Yes",]
titanic <- data(Titanic)
#View(Titanic)
survived <- subset(titanic, Survived == "Yes")
titanic
survived <- subset(titanic, Survived == "Yes")
survived <- subset(Titanic, Survived == "Yes")
data("Titanic")
survived <- subset(Titanic, Survived == "Yes")
data(Titanic)
survived <- subset(Titanic, Survived == "Yes")
data("Titanic")
survived <- subset(Titanic, Survived == "Yes")
# Load the Titanic dataset (assuming it's available in the 'datasets' package)
data("Titanic")
# Subset the Titanic dataset for those who survived
survived_data <- subset(Titanic, Survived == "Yes")
# Load the Titanic dataset (assuming it's available in the 'datasets' package)
data("Titanic")
# Subset the Titanic dataset for those who survived
survived_data <- subset(Titanic, "Survived" == "Yes")
# Display the result
print("Subset of Titanic Data for Survivors:")
print(survived_data)
# Subset the Titanic dataset for those who did not survive
not_survived_data <- subset(Titanic, Survived == "No")
# Load the Titanic dataset (assuming it's available in the 'datasets' package)
data("Titanic")
# Subset the Titanic dataset for those who survived
survived_data <- subset(Titanic, "Survived" == "Yes")
# Display the result
print("Subset of Titanic Data for Survivors:")
print(survived_data)
# Subset the Titanic dataset for those who did not survive
not_survived_data <- subset(Titanic, "Survived" == "No")
# Display the result
print("Subset of Titanic Data for Non-Survivors:")
print(not_survived_data)
data("Titanic")
survived <- subset(Titanic, "Survived" == "Yes")
survived
notsurvived <- subset(Titanic, "Survived" == "No")
notsurvived
data("Titanic")
survived <- subset(Titanic, "Survived" == "Yes")
survived
notsurvived <- as.numeric(subset(Titanic, "Survived" == "No"))
notsurvived
data("Titanic")
survived <- as.numeric(subset(Titanic, "Survived" == "Yes"))
survived
notsurvived <- as.numeric(subset(Titanic, "Survived" == "No"))
notsurvived
data("Titanic")
survived <- as.numeric(subset(Titanic, Survived == "Yes"))
str(titanic)
survived <- subset(titanic, Survived == "Yes")
library(titanic)
install.packages("titanic")
str(titanic)
survived <- subset(titanic, Survived == "Yes")
titanic <- data(Titanic)
#View(Titanic)
library(titanic)
survived <- subset(titanic, Survived == "Yes")
library(titanic)
titanic <- data("titanic_train")
survived <- subset(titanic, Survived == "Yes")
library(titanic)
titanic <- data("titanic_train")
survived <- subset(titanic, Survived == 1)
library(titanic)
titanic <- data("titanic_train")
survived <- subset(titanic, survived == 1)
survived
notsurvived <- subset(titanic, Survived == 0)
library(titanic)
titanic <- data("titanic_train")
survived <- subset(titanic, survived == 1)
survived
notsurvived <- subset(titanic, survived == 0)
notsurvived
survived <- subset(titanic, survived == "Yes")
survived
notsurvived <- subset(titanic, survived == "No")
notsurvived
survived <- subset(titanic, survived == "Yes", )
survived
notsurvived <- subset(titanic, survived == "No", )
notsurvived
survived <- titanic[titanic$survived == "Yes",]
survived <- titanic[titanic$survived == "Yes",]
survived <- subset(titanic, survived == "Yes")
survived
notsurvived <- subset(titanic, survived == "No")
notsurvived
titanic <- data("Titanic")
#View(Titanic)
titanic <- data("Titanic")
titanic
titanic <- data(Titanic)
titanic
data("Titanic")
titanic
titanic <- data("Titanic")
View(titanic)
titanic <- data(Titanic)
View(titanic)
data(Titanic)
View(Titanic)
survived <- subset(Titanic, Survived == "Yes")
survived <- subset(Titanic, survived == "Yes")
survived
notsurvived <- subset(Titanic, survived == "No")
notsurvived
survived <- subset(Titanic, Survived == "Yes")
survived <- subset(Titanic, survived == "Yes")
survived
notsurvived <- subset(Titanic, survived == "No")
notsurvived
survived <- subset(Titanic, 'Survived' == "Yes")
survived
notsurvived <- subset(Titanic, 'Survived' == "No")
notsurvived
survived <- subset(Titanic, 'Survived' == "Yes")
survived
notsurvived <- subset(Titanic, 'Survived' == "No")
notsurvived
survived <- subset(Titanic, 'Survived' == "Yes")
survived
notsurvived <- subset(Titanic, 'Survived' == "No")
notsurvived
survived <- subset(Titanic, 'Survived' == 1)
survived
notsurvived <- subset(Titanic, 'Survived' == 0)
notsurvived
survived <- subset(Titanic, 'Survived' == 1)
survived
notsurvived <- subset(Titanic, 'Survived' == 0)
notsurvived
data("titanic")
# Subset the dataset for those who survived
survived_data <- subset(titanic, Survived == "Yes")
data("titanic")
# Subset the dataset for those who survived
survived_data <- subset(titanic, survived == "Yes")
# Subset the dataset for those who did not survive
not_survived_data <- subset(titanic, survived == "No")
# Display the results
print("Subset of Titanic Data for Those Who Survived:")
head(survived_data)
print("Subset of Titanic Data for Those Who Did Not Survive:")
head(not_survived_data)
survived <- subset(Titanic, survived == "Yes")
survived
notsurvived <- subset(Titanic, survived == "No")
notsurvived
# Load the titanic package
library(titanic)
# Load the titanic dataset
data("titanic_train")
titanic_df <- titanic_train
# Subset for those who survived
survived_subset <- subset(titanic_df, Survived == 1)
# Subset for those who did not survive
not_survived_subset <- subset(titanic_df, Survived == 0)
# Display the results
head(survived_subset)
head(not_survived_subset)
library(titanic)
data("titanic_train")
titanic_df <- titanic_train
survived_subset <- subset(titanic_df, Survived == 1)
survived_subset
not_survived_subset <- subset(titanic_df, Survived == 0)
not_survived_subset
data("BreastCancer")
data("BreastCancer.csv")
read.csv("BreastCancer.csv")
getwd()
setwd("C:\Users\ASUS\Documents\Worksheet#4\worksheet#6")
setwd("C://Users//ASUS//Documents//Worksheet#4//worksheet#6")
BreastCancer <- read.csv("BreastCancer.csv")
BreastCancer
BreastCancer <- read.csv("BreastCancer.csv")
summary(BreastCancer)
BreastCancer <- read.csv("BreastCancer.csv")
head(BreastCancer)
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
standard_error_clump_thickness
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
standard_error_clump_thickness
#d.2
coefficient_of_variability_adhesion <- sd(breast_cancer$marginal_adhesion) / mean(breast_cancer$marginal_adhesion) * 100
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
standard_error_clump_thickness
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
coefficient_of_variability_adhesio
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
standard_error_clump_thickness
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
coefficient_of_variability_adhesion
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
standard_error_clump_thickness
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
coefficient_of_variability_adhesion
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
null_values_bare_nuclei
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
standard_error_clump_thickness
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
coefficient_of_variability_adhesion
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
null_values_bare_nuclei
#d.4
mean_bland_chromatin <- mean(BreastCancer$bland_chromatin)
sd_bland_chromatin <- sd(BreastCancer$bland_chromatin)
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
standard_error_clump_thickness
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
coefficient_of_variability_adhesion
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
null_values_bare_nuclei
#d.4
mean_bland_chromatin <- mean(BreastCancer$bland_chromatin)
mean_bland_chromatin
sd_bland_chromatin <- sd(BreastCancer$bland_chromatin)
sd_bland_chromatin
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
standard_error_clump_thickness
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
coefficient_of_variability_adhesion
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
null_values_bare_nuclei
#d.4
mean_bland_chromatin <- mean(BreastCancer$bland_chromatin)
mean_bland_chromatin
sd_bland_chromatin <- sd(BreastCancer$bland_chromatin)
sd_bland_chromatin
#d.5
confidence_interval_uniformity_shape <- t.test(BreastCancer$shape_uniformity)$conf.int
confidence_interval_uniformity_shape
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
#d.4
mean_bland_chromatin <- mean(BreastCancer$bland_chromatin)
sd_bland_chromatin <- sd(BreastCancer$bland_chromatin)
#d.5
confidence_interval_uniformity_shape <- t.test(BreastCancer$shape_uniformity)$conf.int
print("d.1 Standard Error of the Mean for Clump Thickness:")
print(standard_error_clump_thickness)
print("d.2 Coefficient of Variability for Marginal Adhesion:")
print(coefficient_of_variability_adhesion)
print("d.3 Number of Null Values of Bare Nuclei:")
print(null_values_bare_nuclei)
print("d.4 Mean and Standard Deviation for Bland Chromatin:")
print(paste("Mean:", mean_bland_chromatin))
print(paste("Standard Deviation:", sd_bland_chromatin))
print("d.5 Confidence Interval of the Mean for Uniformity of Cell Shape:")
print(confidence_interval_uniformity_shape)
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
#d.4
mean_bland_chromatin <- mean(BreastCancer$bland_chromatin)
sd_bland_chromatin <- sd(BreastCancer$bland_chromatin)
#d.5
confidence_interval_uniformity_shape <- t.test(BreastCancer$shape_uniformity)$conf.int
print("d.1 Standard Error of the Mean for Clump Thickness:\n")
print(standard_error_clump_thickness)
print("d.2 Coefficient of Variability for Marginal Adhesion:\n")
print(coefficient_of_variability_adhesion)
print("d.3 Number of Null Values of Bare Nuclei:\n")
print(null_values_bare_nuclei)
print("d.4 Mean and Standard Deviation for Bland Chromatin:\n")
print(paste("Mean:", mean_bland_chromatin))
print(paste("Standard Deviation:", sd_bland_chromatin))
print("d.5 Confidence Interval of the Mean for Uniformity of Cell Shape:\n")
print(confidence_interval_uniformity_shape)
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
#d.4
mean_bland_chromatin <- mean(BreastCancer$bland_chromatin)
sd_bland_chromatin <- sd(BreastCancer$bland_chromatin)
#d.5
confidence_interval_uniformity_shape <- t.test(BreastCancer$shape_uniformity)$conf.int
print("d.1 Standard Error of the Mean for Clump Thickness:\n")
print(standard_error_clump_thickness)
print("d.2 Coefficient of Variability for Marginal Adhesion:\n")
print(coefficient_of_variability_adhesion)
print("d.3 Number of Null Values of Bare Nuclei:\n")
print(null_values_bare_nuclei)
print("d.4 Mean and Standard Deviation for Bland Chromatin:\n")
print(paste("Mean:\n", mean_bland_chromatin))
print(paste("Standard Deviation:\n", sd_bland_chromatin))
print("d.5 Confidence Interval of the Mean for Uniformity of Cell Shape:\n")
print(confidence_interval_uniformity_shape)
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
#d.4
mean_bland_chromatin <- mean(BreastCancer$bland_chromatin)
sd_bland_chromatin <- sd(BreastCancer$bland_chromatin)
#d.5
confidence_interval_uniformity_shape <- t.test(BreastCancer$shape_uniformity)$conf.int
paste("d.1 Standard Error of the Mean for Clump Thickness:")
paste(standard_error_clump_thickness)
paste("d.2 Coefficient of Variability for Marginal Adhesion:")
paste(coefficient_of_variability_adhesion)
paste("d.3 Number of Null Values of Bare Nuclei:")
print(null_values_bare_nuclei)
paste("d.4 Mean and Standard Deviation for Bland Chromatin:")
paste(paste("Mean:", mean_bland_chromatin))
paste(paste("Standard Deviation:", sd_bland_chromatin))
paste("d.5 Confidence Interval of the Mean for Uniformity of Cell Shape:")
paste(confidence_interval_uniformity_shape)
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
#d.4
mean_bland_chromatin <- mean(BreastCancer$bland_chromatin)
sd_bland_chromatin <- sd(BreastCancer$bland_chromatin)
#d.5
confidence_interval_uniformity_shape <- t.test(BreastCancer$shape_uniformity)$conf.int
paste("d.1 Standard Error of the Mean for Clump Thickness:")
paste(standard_error_clump_thickness)
paste("d.2 Coefficient of Variability for Marginal Adhesion:")
paste(coefficient_of_variability_adhesion)
paste("d.3 Number of Null Values of Bare Nuclei:")
print(null_values_bare_nuclei)
paste("d.4 Mean and Standard Deviation for Bland Chromatin:")
paste(paste("Mean:", mean_bland_chromatin))
paste(paste("Standard Deviation:", sd_bland_chromatin))
paste("d.5 Confidence Interval of the Mean for Uniformity of Cell Shape:", confidence_interval_uniformity_shape)
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
#d.4
mean_bland_chromatin <- mean(BreastCancer$bland_chromatin)
sd_bland_chromatin <- sd(BreastCancer$bland_chromatin)
#d.5
confidence_interval_uniformity_shape <- t.test(BreastCancer$shape_uniformity)$conf.int
paste("d.1 Standard Error of the Mean for Clump Thickness:")
paste(standard_error_clump_thickness)
paste("d.2 Coefficient of Variability for Marginal Adhesion:")
paste(coefficient_of_variability_adhesion)
paste("d.3 Number of Null Values of Bare Nuclei:")
print(null_values_bare_nuclei)
paste("d.4 Mean and Standard Deviation for Bland Chromatin:")
paste(paste("Mean:", mean_bland_chromatin))
paste(paste("Standard Deviation:", sd_bland_chromatin))
paste("d.5 Confidence Interval of the Mean for Uniformity of Cell Shape:", confidence_interval_uniformity_shape)
num_attributes <- ncol(BreastCancer)
num_attributes
#d.1
standard_error_clump_thickness <- sd(BreastCancer$clump_thickness) / sqrt(length(BreastCancer$clump_thickness))
#d.2
coefficient_of_variability_adhesion <- sd(BreastCancer$marginal_adhesion) / mean(BreastCancer$marginal_adhesion) * 100
#d.3
null_values_bare_nuclei <- sum(is.na(BreastCancer$bare_nucleoli))
#d.4
mean_bland_chromatin <- mean(BreastCancer$bland_chromatin)
sd_bland_chromatin <- sd(BreastCancer$bland_chromatin)
#d.5
confidence_interval_uniformity_shape <- t.test(BreastCancer$shape_uniformity)$conf.int
paste("d.1 Standard Error of the Mean for Clump Thickness:")
paste(standard_error_clump_thickness)
paste("d.2 Coefficient of Variability for Marginal Adhesion:")
paste(coefficient_of_variability_adhesion)
paste("d.3 Number of Null Values of Bare Nuclei:")
print(null_values_bare_nuclei)
paste("d.4 Mean and Standard Deviation for Bland Chromatin:")
paste(paste("Mean:", mean_bland_chromatin))
paste(paste("Standard Deviation:", sd_bland_chromatin))
paste("d.5 Confidence Interval of the Mean for Uniformity of Cell Shape:", confidence_interval_uniformity_shape)
num_attributes <- ncol(BreastCancer)
paste("Number of attributes: ", num_attributes)
num_attributes <- ncol(BreastCancer)
paste("Number of attributes: ", num_attributes)
percentage_malignant <- mean(BreastCancer$class == 4) * 100
paste("Percentage of Respondents who are Malignant:", percentage_malignant)
num_attributes <- ncol(BreastCancer)
paste("Number of attributes: ", num_attributes)
percentage_malignant <- mean(BreastCancer$class == 4) * 100
paste("Percentage of Respondents who are Malignant:", percentage_malignant)
install.packages("AppliedPredictiveModeling")
library("AppliedPredictiveModeling")
view(abalone)
install.packages("AppliedPredictiveModeling")
library("AppliedPredictiveModeling")
View(abalone)
head(abalone)
#install.packages("AppliedPredictiveModeling")
#library("AppliedPredictiveModeling")
View(abalone)
head(abalone)
#install.packages("AppliedPredictiveModeling")
#library("AppliedPredictiveModeling")
View(abalone)
Head(abalone)
#install.packages("AppliedPredictiveModeling")
#library("AppliedPredictiveModeling")
View(abalone)
head(abalone)
#install.packages("AppliedPredictiveModeling")
library("AppliedPredictiveModeling")
View(abalone)
head(abalone)
#install.packages("AppliedPredictiveModeling")
library("AppliedPredictiveModeling")
data("abalone")
View(abalone)
head(abalone)
summary(abalone)
